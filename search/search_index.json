{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Selamat Datang Di Halaman Tugas Penambangan Data (Data mining) Profile : Nama : Defri Dwi Romadhon Harni Saputra Nim : 180411100152 Kelas : Penambangan Data 5D Jurusan : Teknik Informatika Angkatan : 2018 Dosen Pengampu : Mula'ab,S.Si.,M.kom Alamat : Ds.Duduklor Kec.Glagah Kab.Lamongan","title":"index"},{"location":"Statistik Deskriptif/","text":"Statistika Deskriptif Pengertian : Statistika Deskriptif adalah metode representasi keseluruhan himpunandata spesifik dengan memberikan ringkasa pendek dan ukuran data. Statistika Deskriptif juga merupakan metode sederhana hanya mendeskriptiskan kondisi dari data yang dimiliki dalam tabeldiagram grafik dan lainnya yang ditampilkan dalam uraian singkat dan terbatas. Tipe Statistik Deskriptif : Mean \u00b6 Mean merupakan rata-rata keseluruhan angka.Mean didapatkan dari hasil penjumlahan dari keseluruhanangka yang dibagi dengan banyaknya angka itu sendiri.Untuk menghitung data,kita misalkan N data rumus berikut \u200b $$ \\bar x ={\\sum \\limits_{i=1}^{n} x_i \\over N} = {x_1 + x_2 + x_3 + ... + x_n \\over N} $$ Keterangan : x bar = x rata-rata =nilai rata-rata sampel x = data ke n n = banyak data Median \u00b6 Median Merupakan nilai tengah dari sebuah urutan data, median disimbolkan dengan me, Nilaidari Median akan samadengan nilai Quartil 2/Q2.dan dalam mencari median yang banyak n dari data ganjil dan genap memiliki cara perhitungan yang berbeda,dengan rumus sebagai berikut : $$ Me=Q_2 =\\left( \\begin{matrix} n+1 \\over 2 \\end{matrix} \\right), jika\\quad n\\quad ganjil $$ $$ Me=Q_2 =\\left( \\begin{matrix} {xn \\over 2 } {xn+1\\over 2} \\over 2 \\end{matrix} \\right), jika\\quad n\\quad genap $$ Keterangan : Me = Nilai tengah dari kelompok data N = banyak data Modus \u00b6 Modus merupakan nilai atau angka yang paling sering ditemukan dalam sebuah kelompok angka, atau data yang paling sering muncul, atau memiliki frekuensi tertinggi. Modus bisa dilambangkan dengan Mo. Dan dapat dihitung dengan rumus berikut : $$ M_o = Tb + p{b_1 \\over b_1 + b_2} $$ Keterangan : Mo = modusdari kelompok data Tb= Tepi bawah dari elemen modus B1 = selisih frekuensi antara elemen modus dengan elemet sebelumnya B2 = selisih frekuensi antara elemen modus dengan elemen sesudahnya p = panjang interval nilai B1 dan B2 -> adalah mutlak atau selalu positif Varians \u00b6 Varians yaitu ukuran penyebaran setiap nilai dalam suatu himpunan data dari rata-rata. proses mencari varian terdapat langkah yang harus dilakukan, mengambil ukuran jarak dari setiap nilai atau mengurangi rata-rata dari setiap nilai dalam data, kemudian hasil dari ukuran jarak tersebut dikuadratkan dan membagi jumlah kuadrat dengan jumlah nilai dalam himpunan data. Dan dapat dihitung dengan rumus berikut : $$ \\sigma^2 = {\\sum \\limits_{i=1}^{n} (x_i - \\bar x)^2 \\over n} $$ Keterangan : Xi = titik data X bar = rata-rata dari sebuah titik data n = banyak dari anggota data Standar Deviasi \u00b6 Standar deviasi merupakan simpanan baku atau ukuran dispersi kumpulandata relatif terhadap rata-rata atau lebih simplenya adalah akar kuadrat positif dari varian.dan dapat dihitung dengan rumus berikut: $$ \\sigma^ = \\sqrt {{\\sum \\limits_{i=1}^{n} (x_i - \\bar x)^2 \\over n}} $$ Keterangan : x1 = nilai x ke i x = rata-rata n = ukuran sampel Skewness \u00b6 Skewness adalah merupakan kemiringan atau ketidak simetrisan pada suatu distribusi statistic yaitu dimana kurva tampak condong ke kiri atau ke kanan. Skewness digunakan untuk menentukan seberapa jauh mana perbedaan suatu distribusi dengan distribusi normal. Dalam distribusi normal grafik muncul seperti kurva berbentuk lonceng. Skewness dapat dihitung menggunakan rumus sebagai berikut: $$ Skewness = {\\sum \\limits{i=1}^n (x_i - \\bar x)^i \\over (n- 1) \\sigma^3} $$ Keterangan : Xi = titik data x bar = rata rata dari distribusi n= jumlah titik dalam distribusi o = standar deviasi Quartile \u00b6 Quartile adalah merupakan nilai-nilai yang membagikan data yang telah diurutkan kedalam 4 bagian yang sama besar. Kuartil dinotasikan dengan mengunakan notasi Q. Kuartil terdiri dari 3, yaitu kuartil satu Q1, kuartil dua Q2, dan kuartil tiga Q3. Untuk menentukan kuartil kepada data tunggal, kita harus mempertimbangkan banyaknya data n terlebih dahulu. Penghitungan quartil tergantung dari kondisi banyaknya data tersebut, untuk mencari quatile kita dapat menggunakan rumus berikut ini: $$ Q_1 = (n + 1) {1\\over 4} $$ $$ Q_2 = (n + 1) {1\\over 2} $$ $$ Q_3 = (n + 1) {3\\over 4} $$ Keterangan : Q = nilai Quartil N = banyak data Penerapan Statistik Deskriptif Menggunakan Python \u00b6 Alat dan Bahan : \u00b6 Pada penerapan tersebut menggunakan 100 data random yang disimpan dalam bentuk .csv untuk mempermudah dalam penerapan tersebut, dan perlu disiapkan library python yang dapat didownload secara gratis. Library python dapat digunakan adalah sebagai berikut : 1.Pandas, dapat digunakan untuk data manajemen dan data analysis. 2.Scipy, adalah merupakan library berisi kumpulan algoritma atau fungsi matematika. Langkah-Langkah \u00b6 Pertama Pertama-tama masukan library yang sudah disiapkan from scipy import states import pandas as pd Kedua Selanjutnya memuat data Csv yang telah disiapkan df = pd . read_csv ( 'data.csv' ) df code gabungan dari hasil di atas. import pandas as pd from scipy import stats df = pd . read_excel ( 'Book2.xlsx' , sep = ';' ) data = { \"stats\" : [ 'Min' , 'Max' , 'Mean' , 'Standard Deviasi' , 'Variasi' , 'Skewnes' , 'Quantile 1' , 'Quantile 2' , 'Quantile 3' , 'Median' , 'Modus' ]} for i in df . columns : data [ i ] = [ df [ i ] . min (), df [ i ] . max (), df [ i ] . mean (), round ( df [ i ] . std (), 2 ), round ( df [ i ] . var (), 2 ), round ( df [ i ] . skew (), 2 ), df [ i ] . quantile ( 0.25 ), df [ i ] . quantile ( 0.5 ), df [ i ] . quantile ( 0.75 ), df [ i ] . median (), stats . mode ( df [ i ]) . mode [ 0 ]] tes = pd . DataFrame ( data ) tes . style . hide_index () Berikut hasil gabungan dari codeyang telah di buat untuk menampilkan program tabel dibawah ini : stats ALPRO LOGIKA PTI B.ING Min 0 0 0 0 Max 4 4 4 4 Mean 2.05611 2.02605 1.98196 1.9519 Standard Deviasi 1.42 1.39 1.46 1.42 Variasi 2 1.94 2.13 2.03 Skewnes -0.04 -0.03 0.03 0.08 Quantile 1 1 1 1 1 Quantile 2 2 2 2 2 Quantile 3 3 3 3 3 Median 2 2 2 2 Modus 4 3 0 1 Reverensi \u00b6 https://id.wikipedia.org/wiki/statistika_deskriptif https://rusmus.co.id/mean-median-modus-data-kelompok/ http://emerer.com/cara-menghitung-median-modus-mode-kuartil-dan-desil/ https://carasiiumi.com/cara-menghitung-standar-deviasi/ http://muhammadsurindra.blogspot.com/2015/11/tugas2-pengantar-statistika-kaliini.html MathJax.Hub.Config({ tex2jax: {inlineMath: [['$$','$$']]} });","title":"statistika deskriptif"},{"location":"Statistik Deskriptif/#mean","text":"Mean merupakan rata-rata keseluruhan angka.Mean didapatkan dari hasil penjumlahan dari keseluruhanangka yang dibagi dengan banyaknya angka itu sendiri.Untuk menghitung data,kita misalkan N data rumus berikut \u200b $$ \\bar x ={\\sum \\limits_{i=1}^{n} x_i \\over N} = {x_1 + x_2 + x_3 + ... + x_n \\over N} $$ Keterangan : x bar = x rata-rata =nilai rata-rata sampel x = data ke n n = banyak data","title":"Mean"},{"location":"Statistik Deskriptif/#median","text":"Median Merupakan nilai tengah dari sebuah urutan data, median disimbolkan dengan me, Nilaidari Median akan samadengan nilai Quartil 2/Q2.dan dalam mencari median yang banyak n dari data ganjil dan genap memiliki cara perhitungan yang berbeda,dengan rumus sebagai berikut : $$ Me=Q_2 =\\left( \\begin{matrix} n+1 \\over 2 \\end{matrix} \\right), jika\\quad n\\quad ganjil $$ $$ Me=Q_2 =\\left( \\begin{matrix} {xn \\over 2 } {xn+1\\over 2} \\over 2 \\end{matrix} \\right), jika\\quad n\\quad genap $$ Keterangan : Me = Nilai tengah dari kelompok data N = banyak data","title":"Median"},{"location":"Statistik Deskriptif/#modus","text":"Modus merupakan nilai atau angka yang paling sering ditemukan dalam sebuah kelompok angka, atau data yang paling sering muncul, atau memiliki frekuensi tertinggi. Modus bisa dilambangkan dengan Mo. Dan dapat dihitung dengan rumus berikut : $$ M_o = Tb + p{b_1 \\over b_1 + b_2} $$ Keterangan : Mo = modusdari kelompok data Tb= Tepi bawah dari elemen modus B1 = selisih frekuensi antara elemen modus dengan elemet sebelumnya B2 = selisih frekuensi antara elemen modus dengan elemen sesudahnya p = panjang interval nilai B1 dan B2 -> adalah mutlak atau selalu positif","title":"Modus"},{"location":"Statistik Deskriptif/#varians","text":"Varians yaitu ukuran penyebaran setiap nilai dalam suatu himpunan data dari rata-rata. proses mencari varian terdapat langkah yang harus dilakukan, mengambil ukuran jarak dari setiap nilai atau mengurangi rata-rata dari setiap nilai dalam data, kemudian hasil dari ukuran jarak tersebut dikuadratkan dan membagi jumlah kuadrat dengan jumlah nilai dalam himpunan data. Dan dapat dihitung dengan rumus berikut : $$ \\sigma^2 = {\\sum \\limits_{i=1}^{n} (x_i - \\bar x)^2 \\over n} $$ Keterangan : Xi = titik data X bar = rata-rata dari sebuah titik data n = banyak dari anggota data","title":"Varians"},{"location":"Statistik Deskriptif/#standar-deviasi","text":"Standar deviasi merupakan simpanan baku atau ukuran dispersi kumpulandata relatif terhadap rata-rata atau lebih simplenya adalah akar kuadrat positif dari varian.dan dapat dihitung dengan rumus berikut: $$ \\sigma^ = \\sqrt {{\\sum \\limits_{i=1}^{n} (x_i - \\bar x)^2 \\over n}} $$ Keterangan : x1 = nilai x ke i x = rata-rata n = ukuran sampel","title":"Standar Deviasi"},{"location":"Statistik Deskriptif/#skewness","text":"Skewness adalah merupakan kemiringan atau ketidak simetrisan pada suatu distribusi statistic yaitu dimana kurva tampak condong ke kiri atau ke kanan. Skewness digunakan untuk menentukan seberapa jauh mana perbedaan suatu distribusi dengan distribusi normal. Dalam distribusi normal grafik muncul seperti kurva berbentuk lonceng. Skewness dapat dihitung menggunakan rumus sebagai berikut: $$ Skewness = {\\sum \\limits{i=1}^n (x_i - \\bar x)^i \\over (n- 1) \\sigma^3} $$ Keterangan : Xi = titik data x bar = rata rata dari distribusi n= jumlah titik dalam distribusi o = standar deviasi","title":"Skewness"},{"location":"Statistik Deskriptif/#quartile","text":"Quartile adalah merupakan nilai-nilai yang membagikan data yang telah diurutkan kedalam 4 bagian yang sama besar. Kuartil dinotasikan dengan mengunakan notasi Q. Kuartil terdiri dari 3, yaitu kuartil satu Q1, kuartil dua Q2, dan kuartil tiga Q3. Untuk menentukan kuartil kepada data tunggal, kita harus mempertimbangkan banyaknya data n terlebih dahulu. Penghitungan quartil tergantung dari kondisi banyaknya data tersebut, untuk mencari quatile kita dapat menggunakan rumus berikut ini: $$ Q_1 = (n + 1) {1\\over 4} $$ $$ Q_2 = (n + 1) {1\\over 2} $$ $$ Q_3 = (n + 1) {3\\over 4} $$ Keterangan : Q = nilai Quartil N = banyak data","title":"Quartile"},{"location":"Statistik Deskriptif/#penerapan-statistik-deskriptif-menggunakan-python","text":"","title":"Penerapan Statistik Deskriptif Menggunakan Python"},{"location":"Statistik Deskriptif/#alat-dan-bahan","text":"Pada penerapan tersebut menggunakan 100 data random yang disimpan dalam bentuk .csv untuk mempermudah dalam penerapan tersebut, dan perlu disiapkan library python yang dapat didownload secara gratis. Library python dapat digunakan adalah sebagai berikut : 1.Pandas, dapat digunakan untuk data manajemen dan data analysis. 2.Scipy, adalah merupakan library berisi kumpulan algoritma atau fungsi matematika.","title":"Alat dan Bahan :"},{"location":"Statistik Deskriptif/#langkah-langkah","text":"Pertama Pertama-tama masukan library yang sudah disiapkan from scipy import states import pandas as pd Kedua Selanjutnya memuat data Csv yang telah disiapkan df = pd . read_csv ( 'data.csv' ) df code gabungan dari hasil di atas. import pandas as pd from scipy import stats df = pd . read_excel ( 'Book2.xlsx' , sep = ';' ) data = { \"stats\" : [ 'Min' , 'Max' , 'Mean' , 'Standard Deviasi' , 'Variasi' , 'Skewnes' , 'Quantile 1' , 'Quantile 2' , 'Quantile 3' , 'Median' , 'Modus' ]} for i in df . columns : data [ i ] = [ df [ i ] . min (), df [ i ] . max (), df [ i ] . mean (), round ( df [ i ] . std (), 2 ), round ( df [ i ] . var (), 2 ), round ( df [ i ] . skew (), 2 ), df [ i ] . quantile ( 0.25 ), df [ i ] . quantile ( 0.5 ), df [ i ] . quantile ( 0.75 ), df [ i ] . median (), stats . mode ( df [ i ]) . mode [ 0 ]] tes = pd . DataFrame ( data ) tes . style . hide_index () Berikut hasil gabungan dari codeyang telah di buat untuk menampilkan program tabel dibawah ini : stats ALPRO LOGIKA PTI B.ING Min 0 0 0 0 Max 4 4 4 4 Mean 2.05611 2.02605 1.98196 1.9519 Standard Deviasi 1.42 1.39 1.46 1.42 Variasi 2 1.94 2.13 2.03 Skewnes -0.04 -0.03 0.03 0.08 Quantile 1 1 1 1 1 Quantile 2 2 2 2 2 Quantile 3 3 3 3 3 Median 2 2 2 2 Modus 4 3 0 1","title":"Langkah-Langkah"},{"location":"Statistik Deskriptif/#reverensi","text":"https://id.wikipedia.org/wiki/statistika_deskriptif https://rusmus.co.id/mean-median-modus-data-kelompok/ http://emerer.com/cara-menghitung-median-modus-mode-kuartil-dan-desil/ https://carasiiumi.com/cara-menghitung-standar-deviasi/ http://muhammadsurindra.blogspot.com/2015/11/tugas2-pengantar-statistika-kaliini.html MathJax.Hub.Config({ tex2jax: {inlineMath: [['$$','$$']]} });","title":"Reverensi"},{"location":"Tugas 2 - Mengukur Jarak/","text":"Mengukur Jarak \u00b6 Pengukuran jarak memegang peran yang sangat penting dalam menentukan kemiripan atau keteraturan di antara data dan item. dengan hal ini di lakukan untuk mengetahui ,dengan sebagian cara seperti apa data dikatakan saling terkait, mirip ataupun tidak mirip, dan metode pengukuran jarak seperti apa yang diperlukan untuk membandingkannya. Pada proses clustering, tahapan menentukan atau mendeskripsikan nilai kuantitatif dari tingkat kemiripan atau ketidakmiripan data (proximity measure) memiliki peran yang sangat penting, sehingga perlu dilakukannya perbandingan beberapa tahap metode yang sering digunakan, yaitu jarak euclidean, manhattan, dan minkowski. Mengukur jarak menggunakan Eucliean Distance \u00b6 Euclidean distance yaitu merupakan salah satu metode perhitungan jarak yang digunakan untuk mengukur sebuah jarak dari 2(dua) buah titik dalam Euclidean space (meliputi bidang euclidean dua dimensi, tiga dimensi, atau bahkan lebih). Jarak yang paling dikenal dan yang paling digunakan untuk data numerik adalah jarak Euclidean. Ini adalah kasus khusus dari jarak Minkowski ketika m = 2. Jarak Euclidean berkinerja baik ketika digunakan untuk kumpulan data cluster kompak atau terisolasi . Mengukur jarak menggunakan Manhattan Distance \u00b6 Manhattan distance adalah kasus khusus dari jarak Minkowski distance pada m = 1. Seperti Minkowski Distance, Manhattan distance sensitif terhadap outlier. BIla ukuran ini digunakan dalam algoritma clustering , bentuk cluster adalah hyper-rectangular. Manhattan distance digunakan untuk menghitung perbedaan absolut (mutlak) antara koordinat sepasang objek. Rumus yang digunakan adalah sebagai berikut: $$ d _ { \\operatorname { man } } = \\sum _ { i = 1 } ^ { n } \\left| x _ { i } - y _ { i } \\right| $$ dimana m adalah merupakan bilangan riel positif xi dan yi merupakan dua vektor dalam satu ruang dimensi n implementasi ukuran jarak minkowski pada model clustering data atribut dilakukan normalisasi untuk mengukur dominasi dari atribut yang memiliki skala data besar,. Mengukur jarak menggunakan Minkowski Distance \u00b6 Minkowski distance yaitu merupakan sebuah metrik dalam ruang vektor di mana suatu norma didefinisikan (normed vector space) sekaligus dianggap menjadi sebagai generalisasi dari Euclidean distance dan Manhattan distance. Dalam pengukuran jarak objek menggunakan minkowski distance biasanya digunakan nilai p adalah 1 atau 2. Berikut dibawah ini rumus yang digunakan menghitung jarak dalam metode ini. $$ d _ { \\operatorname { min } } = ( \\ sum _ { i = 1 } ^ { n } | x _ { i } - y _ { i } | ^ { m } ) ^ { \\frac { 1 } { m } } , m \\geq 1 $$ MathJax.Hub.Config({ tex2jax: {inlineMath: [['$$','$$']]} }); Langkah mengukur jarak : \u00b6 #Tugas 2_Penambangan Data.csv import pandas as pd from scipy import stats df = pd . read_csv ( 'Tugas 2_Penambangan Data.csv' , nrows = 4 , sep = ';' ) df import scipy.spatial.distance as minko import itertools def minkowski ( x , y , data ): return sum ( x ) + sum ( y ) dfvalues = df . values . tolist () data = [ [ x [ 0 ], x [ 1 ], minko . minkowski ( dfvalues [ x [ 0 ]], dfvalues [ x [ 1 ]], 1 ) , minko . minkowski ( dfvalues [ x [ 0 ]], dfvalues [ x [ 1 ]], 2 )] for x in itertools . combinations ( range ( 4 ), 2 ) ] columns = [ 'x' , 'y' , 'Minkowski (m-1)' , 'Minkowski (m-2)' ] pd . DataFrame ( data , columns = columns ) numerical = [ 0 , 3 ] categorical = [ 1 , 2 , 6 , 7 ] binary = [ 4 , 5 , 8 ] ordinal = [ 1 , 2 ] def chordDist ( v1 , v2 , jnis ): jmlh = 0 normv1 = 0 normv2 = 0 for x in range ( len ( jnis )): normv1 = normv1 + ( int ( df . values . tolist ()[ v1 ][ jnis [ x ]]) ** 2 ) normv2 = normv2 + ( int ( df . values . tolist ()[ v1 ][ jnis [ x ]]) ** 2 ) jmlh = jmlh + ( int ( df . values . tolist ()[ v1 ][ jnis [ x ]]) * int ( df . values . tolist ()[ v2 ][ jnis [ x ]])) return (( 2 - ( 2 * jmlh / ( normv1 * normv2 ))) ** 0.5 ) from IPython.display import HTML , display import tabulate table = [ [ \"x\" ] + [ 'y' ] + [ \"Jarak\" ] + [ \"Numeric\" ] + [ \"Ordinal\" ] + [ \"Categorical\" ] + [ \"Binary\" ], [ 0 ] + [ 2 ] + [ 0 ] + [ \"{:.2f}\" . format ( chordDist ( 0 , 2 , numerical ))] + [ 0 ] + [ 0 ] + [ 0 ], [ 0 ] + [ 3 ] + [ 0 ] + [ \"{:.2f}\" . format ( chordDist ( 0 , 3 , numerical ))] + [ 0 ] + [ 0 ] + [ 0 ], [ 1 ] + [ 2 ] + [ 0 ] + [ \"{:.2f}\" . format ( chordDist ( 1 , 2 , numerical ))] + [ 0 ] + [ 0 ] + [ 0 ], [ 1 ] + [ 3 ] + [ 0 ] + [ \"{:.2f}\" . format ( chordDist ( 1 , 3 , numerical ))] + [ 0 ] + [ 0 ] + [ 0 ], [ 2 ] + [ 3 ] + [ 0 ] + [ \"{:.2f}\" . format ( chordDist ( 2 , 3 , numerical ))] + [ 0 ] + [ 0 ] + [ 0 ], ] display ( HTML ( tabulate . tabulate ( table , tablefmt = 'html' )))","title":"mengukur jarak"},{"location":"Tugas 2 - Mengukur Jarak/#mengukur-jarak","text":"Pengukuran jarak memegang peran yang sangat penting dalam menentukan kemiripan atau keteraturan di antara data dan item. dengan hal ini di lakukan untuk mengetahui ,dengan sebagian cara seperti apa data dikatakan saling terkait, mirip ataupun tidak mirip, dan metode pengukuran jarak seperti apa yang diperlukan untuk membandingkannya. Pada proses clustering, tahapan menentukan atau mendeskripsikan nilai kuantitatif dari tingkat kemiripan atau ketidakmiripan data (proximity measure) memiliki peran yang sangat penting, sehingga perlu dilakukannya perbandingan beberapa tahap metode yang sering digunakan, yaitu jarak euclidean, manhattan, dan minkowski.","title":"Mengukur Jarak"},{"location":"Tugas 2 - Mengukur Jarak/#mengukur-jarak-menggunakan-eucliean-distance","text":"Euclidean distance yaitu merupakan salah satu metode perhitungan jarak yang digunakan untuk mengukur sebuah jarak dari 2(dua) buah titik dalam Euclidean space (meliputi bidang euclidean dua dimensi, tiga dimensi, atau bahkan lebih). Jarak yang paling dikenal dan yang paling digunakan untuk data numerik adalah jarak Euclidean. Ini adalah kasus khusus dari jarak Minkowski ketika m = 2. Jarak Euclidean berkinerja baik ketika digunakan untuk kumpulan data cluster kompak atau terisolasi .","title":"Mengukur jarak menggunakan Eucliean Distance"},{"location":"Tugas 2 - Mengukur Jarak/#mengukur-jarak-menggunakan-manhattan-distance","text":"Manhattan distance adalah kasus khusus dari jarak Minkowski distance pada m = 1. Seperti Minkowski Distance, Manhattan distance sensitif terhadap outlier. BIla ukuran ini digunakan dalam algoritma clustering , bentuk cluster adalah hyper-rectangular. Manhattan distance digunakan untuk menghitung perbedaan absolut (mutlak) antara koordinat sepasang objek. Rumus yang digunakan adalah sebagai berikut: $$ d _ { \\operatorname { man } } = \\sum _ { i = 1 } ^ { n } \\left| x _ { i } - y _ { i } \\right| $$ dimana m adalah merupakan bilangan riel positif xi dan yi merupakan dua vektor dalam satu ruang dimensi n implementasi ukuran jarak minkowski pada model clustering data atribut dilakukan normalisasi untuk mengukur dominasi dari atribut yang memiliki skala data besar,.","title":"Mengukur jarak menggunakan Manhattan Distance"},{"location":"Tugas 2 - Mengukur Jarak/#mengukur-jarak-menggunakan-minkowski-distance","text":"Minkowski distance yaitu merupakan sebuah metrik dalam ruang vektor di mana suatu norma didefinisikan (normed vector space) sekaligus dianggap menjadi sebagai generalisasi dari Euclidean distance dan Manhattan distance. Dalam pengukuran jarak objek menggunakan minkowski distance biasanya digunakan nilai p adalah 1 atau 2. Berikut dibawah ini rumus yang digunakan menghitung jarak dalam metode ini. $$ d _ { \\operatorname { min } } = ( \\ sum _ { i = 1 } ^ { n } | x _ { i } - y _ { i } | ^ { m } ) ^ { \\frac { 1 } { m } } , m \\geq 1 $$ MathJax.Hub.Config({ tex2jax: {inlineMath: [['$$','$$']]} });","title":"Mengukur jarak menggunakan Minkowski Distance"},{"location":"Tugas 2 - Mengukur Jarak/#langkah-mengukur-jarak","text":"#Tugas 2_Penambangan Data.csv import pandas as pd from scipy import stats df = pd . read_csv ( 'Tugas 2_Penambangan Data.csv' , nrows = 4 , sep = ';' ) df import scipy.spatial.distance as minko import itertools def minkowski ( x , y , data ): return sum ( x ) + sum ( y ) dfvalues = df . values . tolist () data = [ [ x [ 0 ], x [ 1 ], minko . minkowski ( dfvalues [ x [ 0 ]], dfvalues [ x [ 1 ]], 1 ) , minko . minkowski ( dfvalues [ x [ 0 ]], dfvalues [ x [ 1 ]], 2 )] for x in itertools . combinations ( range ( 4 ), 2 ) ] columns = [ 'x' , 'y' , 'Minkowski (m-1)' , 'Minkowski (m-2)' ] pd . DataFrame ( data , columns = columns ) numerical = [ 0 , 3 ] categorical = [ 1 , 2 , 6 , 7 ] binary = [ 4 , 5 , 8 ] ordinal = [ 1 , 2 ] def chordDist ( v1 , v2 , jnis ): jmlh = 0 normv1 = 0 normv2 = 0 for x in range ( len ( jnis )): normv1 = normv1 + ( int ( df . values . tolist ()[ v1 ][ jnis [ x ]]) ** 2 ) normv2 = normv2 + ( int ( df . values . tolist ()[ v1 ][ jnis [ x ]]) ** 2 ) jmlh = jmlh + ( int ( df . values . tolist ()[ v1 ][ jnis [ x ]]) * int ( df . values . tolist ()[ v2 ][ jnis [ x ]])) return (( 2 - ( 2 * jmlh / ( normv1 * normv2 ))) ** 0.5 ) from IPython.display import HTML , display import tabulate table = [ [ \"x\" ] + [ 'y' ] + [ \"Jarak\" ] + [ \"Numeric\" ] + [ \"Ordinal\" ] + [ \"Categorical\" ] + [ \"Binary\" ], [ 0 ] + [ 2 ] + [ 0 ] + [ \"{:.2f}\" . format ( chordDist ( 0 , 2 , numerical ))] + [ 0 ] + [ 0 ] + [ 0 ], [ 0 ] + [ 3 ] + [ 0 ] + [ \"{:.2f}\" . format ( chordDist ( 0 , 3 , numerical ))] + [ 0 ] + [ 0 ] + [ 0 ], [ 1 ] + [ 2 ] + [ 0 ] + [ \"{:.2f}\" . format ( chordDist ( 1 , 2 , numerical ))] + [ 0 ] + [ 0 ] + [ 0 ], [ 1 ] + [ 3 ] + [ 0 ] + [ \"{:.2f}\" . format ( chordDist ( 1 , 3 , numerical ))] + [ 0 ] + [ 0 ] + [ 0 ], [ 2 ] + [ 3 ] + [ 0 ] + [ \"{:.2f}\" . format ( chordDist ( 2 , 3 , numerical ))] + [ 0 ] + [ 0 ] + [ 0 ], ] display ( HTML ( tabulate . tabulate ( table , tablefmt = 'html' )))","title":"Langkah mengukur jarak :"},{"location":"Tugas 3 - Missing Value with KNN/","text":"Missing Value with K Nearest Neighbor \u00b6 Missing Data merupakan suatu informasi yang tidak tersedia dalam suatu data. Missing data mempengaruhi hasil penelitian karena keberadaan missing data dapat mengurangi tingkat akurasi dari hasil penelitian. Missing data dapat diatasi dengan imputasi. Imputasi merupakan suatu metode yang mengatasi missing data dengan mengisi nilai yang hilang dengan suatu nilai berdasarkan informasi lain yang didapat dari data tersebut. Salah satu metode imputasi yaitu metode K Nearest Neighbor(KNN). Penelitian itu dilakukan untuk memprediksi seluruh nilai yang hilang dengan metode KNN. KNN bekerja dengan menghitung weight mean estimation berdasarkan jumlah K. K yaitu jumlah observasi terdekat yang akan digunakan. Dalam penelitian ini, K yang digunakan yaitu K = 1, K = 5, K = 10, K = 15, dan K=20. Mean Square Error (MSE) dan Mean Absolute Percentage Error (MAPE) digunakan untuk mengetahui ketepatan hasil imputasi. Berdasarkan seluruh nilai rata-rata MSE dan MAPE dari 10 replikasi, KNN terbaik pada missing data 10% dan 20% terjadi pada saat K = 10, sedangkan untuk missing data 30% terjadi saat K = 15. Imputasi dengan Metode KNN \u00b6 Salah satu metode yang sering digunakan untuk permasalahan imputasi missing data adalah yaitu KNN. Metode ini merupakan metode sederhana dan fleksibel karena dapat digunakan baik pada variabel dengan data kontinu maupun data diskrit (Mawarsari, 2012). Algoritma KNN : Tentukan Nilai K Tentukan jarak Euclidian antar instance pada dataset Dm dan dataset Dc Imputasi data hilang dengan seluruh rata-rata k tetangga terdekat di Dc Kelemahan dan Keuntungan KNN \u00b6 Keuntungan KNN metode ini dapat bisa digunakan untuk data yang bersifat kualitatif maupun kuantitatif, tanpa perlu sedikit membuat model prediksi, algoritma sederhana, KNN dibutuhkan untuk pertimbangan struktur korelasi data (Acuna, 2004). Sedangkan kelemahan KNN adalah adanya pemilihan fungsi jarak, dapat menggunakan Euclidean, Manhattan, Mahalanobis dan Pearson. # importing pandas as pd import pandas as pd # importing numpy as np import numpy as np # dictionary of lists dict = { 'First Score' :[ 100 , 90 , np . nan , 95 ], 'Second Score' : [ 30 , 45 , 56 , np . nan ], 'Third Score' :[ np . nan , 40 , 80 , 98 ]} # creating a dataframe from dictionary df = pd . DataFrame ( dict ) # filling missing value using fillna() df . fillna ( 0 )","title":"missing value"},{"location":"Tugas 3 - Missing Value with KNN/#missing-value-with-k-nearest-neighbor","text":"Missing Data merupakan suatu informasi yang tidak tersedia dalam suatu data. Missing data mempengaruhi hasil penelitian karena keberadaan missing data dapat mengurangi tingkat akurasi dari hasil penelitian. Missing data dapat diatasi dengan imputasi. Imputasi merupakan suatu metode yang mengatasi missing data dengan mengisi nilai yang hilang dengan suatu nilai berdasarkan informasi lain yang didapat dari data tersebut. Salah satu metode imputasi yaitu metode K Nearest Neighbor(KNN). Penelitian itu dilakukan untuk memprediksi seluruh nilai yang hilang dengan metode KNN. KNN bekerja dengan menghitung weight mean estimation berdasarkan jumlah K. K yaitu jumlah observasi terdekat yang akan digunakan. Dalam penelitian ini, K yang digunakan yaitu K = 1, K = 5, K = 10, K = 15, dan K=20. Mean Square Error (MSE) dan Mean Absolute Percentage Error (MAPE) digunakan untuk mengetahui ketepatan hasil imputasi. Berdasarkan seluruh nilai rata-rata MSE dan MAPE dari 10 replikasi, KNN terbaik pada missing data 10% dan 20% terjadi pada saat K = 10, sedangkan untuk missing data 30% terjadi saat K = 15.","title":"Missing Value with K Nearest Neighbor"},{"location":"Tugas 3 - Missing Value with KNN/#imputasi-dengan-metode-knn","text":"Salah satu metode yang sering digunakan untuk permasalahan imputasi missing data adalah yaitu KNN. Metode ini merupakan metode sederhana dan fleksibel karena dapat digunakan baik pada variabel dengan data kontinu maupun data diskrit (Mawarsari, 2012). Algoritma KNN : Tentukan Nilai K Tentukan jarak Euclidian antar instance pada dataset Dm dan dataset Dc Imputasi data hilang dengan seluruh rata-rata k tetangga terdekat di Dc","title":"Imputasi dengan Metode KNN"},{"location":"Tugas 3 - Missing Value with KNN/#kelemahan-dan-keuntungan-knn","text":"Keuntungan KNN metode ini dapat bisa digunakan untuk data yang bersifat kualitatif maupun kuantitatif, tanpa perlu sedikit membuat model prediksi, algoritma sederhana, KNN dibutuhkan untuk pertimbangan struktur korelasi data (Acuna, 2004). Sedangkan kelemahan KNN adalah adanya pemilihan fungsi jarak, dapat menggunakan Euclidean, Manhattan, Mahalanobis dan Pearson. # importing pandas as pd import pandas as pd # importing numpy as np import numpy as np # dictionary of lists dict = { 'First Score' :[ 100 , 90 , np . nan , 95 ], 'Second Score' : [ 30 , 45 , 56 , np . nan ], 'Third Score' :[ np . nan , 40 , 80 , 98 ]} # creating a dataframe from dictionary df = pd . DataFrame ( dict ) # filling missing value using fillna() df . fillna ( 0 )","title":"Kelemahan dan Keuntungan KNN"}]}